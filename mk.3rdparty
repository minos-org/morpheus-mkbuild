<$mkbuild/mk.config

all:QV: build

build:QV: fetch patch
	mkdir -p $src
	oldpwd=`pwd`
	cd $src
	for f in $mkfile; do
		cachefile=$oldpwd/.cache-`basename $f`
		t=$(cmp -s $f $cachefile || echo $?)
		if test "$t" != ""; then
			if test "${targ}" != ""; then
				env -i PATH="$PATH" configmk="$configmk" mkbuild="$mkbuild" mk -f $f TARG="${targ}"
			else
				env -i PATH="$PATH" configmk="$configmk" mkbuild="$mkbuild" mk -f $f
			fi
			cp $f $cachefile
		fi
	done

patch:QV: fetch
	cd $src
	for p in $patches; do
		patch -p1 < $p
	done

install:QV: all
	cd $src
	for f in $mkfile; do
		if test "${targ}" != ""; then
			env -i PATH="$PATH" configmk="$configmk" mkbuild="$mkbuild" mk -f $f install TARG="${targ}" ROOT="${ROOT}"
		else
			env -i PATH="$PATH" configmk="$configmk" mkbuild="$mkbuild" mk -f $f install ROOT="${ROOT}"
		fi
	done

clean:QV:
	oldpwd=`pwd`
	if test -d $src; then
		cd $src
		for f in $mkfile; do
			rm -f $oldpwd/.cache-`basename $f`
			env -i PATH="$PATH" configmk="$configmk" mkbuild="$mkbuild" mk -f $f clean
		done
	fi

distclean:QV:
	if test -d $src; then
		echo rm -rf $src
		rm -rf $src
	fi

<$mkbuild/mk.fetch
<$mkbuild/mk.package
